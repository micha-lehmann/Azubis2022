// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherApi;

#nullable disable

namespace WeatherApi.Migrations
{
    [DbContext(typeof(WeatherContext))]
    [Migration("20220823082836_Ladezeit")]
    partial class Ladezeit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WeatherApi.Ladezeitpunkt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Uhrzeit")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Ladezeitpunkte");
                });

            modelBuilder.Entity("WeatherApi.WeatherMeasurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LadezeitpunktId")
                        .HasColumnType("int");

                    b.Property<double>("Regen")
                        .HasColumnType("float");

                    b.Property<double>("TemperatureC")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("LadezeitpunktId");

                    b.ToTable("WeatherMeasurements");
                });

            modelBuilder.Entity("WeatherApi.WeatherMeasurement", b =>
                {
                    b.HasOne("WeatherApi.Ladezeitpunkt", "Ladezeitpunkt")
                        .WithMany("WeatherMeasurements")
                        .HasForeignKey("LadezeitpunktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ladezeitpunkt");
                });

            modelBuilder.Entity("WeatherApi.Ladezeitpunkt", b =>
                {
                    b.Navigation("WeatherMeasurements");
                });
#pragma warning restore 612, 618
        }
    }
}
